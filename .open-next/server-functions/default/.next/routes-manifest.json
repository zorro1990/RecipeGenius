{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "Permissions-Policy",
          "value": "camera=(), microphone=(), geolocation=()"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "https://recipe-genius.your-domain.com"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization"
        },
        {
          "key": "Access-Control-Max-Age",
          "value": "86400"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/static/:path*",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/static(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/:path*\\.(woff|woff2|ttf|otf|eot)$",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?\\.(woff|woff2|ttf|otf|eot)\\$(?:/)?$"
    },
    {
      "source": "/:path*\\.(png|jpg|jpeg|gif|svg|ico|webp|avif)$",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?\\.(png|jpg|jpeg|gif|svg|ico|webp|avif)\\$(?:/)?$"
    }
  ],
  "dynamicRoutes": [
    {
      "page": "/examples/[id]",
      "regex": "^/examples/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/examples/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/api-status",
      "regex": "^/api\\-status(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/api\\-status(?:/)?$"
    },
    {
      "page": "/debug",
      "regex": "^/debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug(?:/)?$"
    },
    {
      "page": "/examples",
      "regex": "^/examples(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/examples(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/ingredients",
      "regex": "^/ingredients(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ingredients(?:/)?$"
    },
    {
      "page": "/recipe",
      "regex": "^/recipe(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/recipe(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": [
    {
      "source": "/api/:path*",
      "destination": "/api/:path*",
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ]
}